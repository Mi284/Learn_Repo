---------------
package com.selenium.pages;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.testng.Reporter;

public class CustomerForm{

	//public WebDriver driver;
	/*public By txt_customerName = By.name("cname");
	public By txt_age = By.name("age");
	public By txt_address = By.name("address");
	public By txt_phone = By.name("phonenumber");
	public By txt_email = By.name("email");`
	public By btn_submit = By.id("submit");
	public By msg = By.id("message");*/
	
	@FindBy(name = "cname")
	WebElement txt_customerName;	
	@FindBy(name = "age")
	WebElement txt_age;	
	@FindBy(name = "address")
	WebElement txt_address;	
	@FindBy(name = "phonenumber")
	WebElement txt_phone;
	@FindBy(name = "email")
	WebElement txt_email;	
	@FindBy(id = "submit")
	WebElement btn_submit;	
	@FindBy(id = "message")
	WebElement msg;	

	public CustomerForm(WebDriver driver) {
		PageFactory.initElements(driver, this);
		//this.driver=driver;	
	}

	public void testSetCustomerName(String cName) {
		//WebElement element = driver.findElement(txt_customerName);
		if(txt_customerName.isDisplayed()) {
			txt_customerName.sendKeys(cName);
		}else {
			Reporter.log("Element not displayed");
		}
	}

	public void testSetAge(String age) {
		//WebElement element =driver.findElement(txt_age);
		if(txt_age.isDisplayed()) {
			txt_age.sendKeys(age);
		}else {
			Reporter.log("Element not displayed");
		}
	}

	public void testSetAddress(String address) {
		//WebElement element =driver.findElement(txt_address);
		if(txt_address.isDisplayed()) {
			txt_address.sendKeys(address);

		}else {
			Reporter.log("Element not displayed");
		}
	}

	public void testSetPhoneNumber(String phoneNumber) {
		//WebElement element =driver.findElement(txt_phone);
		if(txt_phone.isDisplayed()) {
			txt_phone.sendKeys(phoneNumber);

		}else {
			Reporter.log("Element not displayed");
		}
	}

	public void testSetEmail(String email) {
		//WebElement element =driver.findElement(txt_email);
		if(txt_email.isDisplayed()) {
			txt_email.sendKeys(email);

		}else {
			Reporter.log("Element not displayed");
		}
	}

	public void submitForm() {
		//WebElement element =driver.findElement(btn_submit);
		if(btn_submit.isDisplayed()) {
			btn_submit.click();
		}else {
			Reporter.log("Element not displayed");
		}
	}

	public String testGetErrorMessage() {
		//String errorMsg=driver.findElement(msg).getText();
		String errorMsg=msg.getText();
		System.out.println("Validation Msg is : " +errorMsg);
		return errorMsg;
	}
}

----------------------

package com.selenium.pages;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class DisplayCustomer {
	
	/*WebDriver driver;
	public By txt_title = By.xpath("/html/body/h2");
	public By txt_custName = By.xpath("/html/body/table/tbody/tr[1]/td[2]");
	public By txt_age = By.xpath("/html/body/table/tbody/tr[2]/td[2]");
	public By txt_address = By.xpath("/html/body/table/tbody/tr[3]/td[2]");
	public By txt_phone = By.xpath("/html/body/table/tbody/tr[4]/td[2]");
	public By txt_email = By.xpath("/html/body/table/tbody/tr[5]/td[2]");*/
	
	@FindBy(xpath = "/html/body/h2")
	WebElement txt_title;	
	@FindBy(xpath = "/html/body/table/tbody/tr[1]/td[2]")
	WebElement txt_custName;	
	@FindBy(xpath = "/html/body/table/tbody/tr[2]/td[2]")
	WebElement txt_age;	
	@FindBy(xpath = "/html/body/table/tbody/tr[3]/td[2]")
	WebElement txt_address;
	@FindBy(xpath = "/html/body/table/tbody/tr[4]/td[2]")
	WebElement txt_phone;	
	@FindBy(xpath = "/html/body/table/tbody/tr[5]/td[2]")
	WebElement txt_email;

	public DisplayCustomer(WebDriver driver) {
		PageFactory.initElements(driver, this);
		//this.driver=driver;	
	}
	
	public String getTitle() {
		String title=txt_title.getText();		
		System.out.println("Title: " +title);
		return title;
	}
	
	public String getName() {
		String name=txt_custName.getText();
		System.out.println("Title: " +name);
		return name;
	}
	
	
	public String getAge() {
		String age=txt_age.getText();
		System.out.println("Title: " +age);
		return age;
	}
	
	public String getAddress() {
		String address=txt_address.getText();
		System.out.println("Title: " +address);
		return address;
	}
	public String getPhoneNumber() {
		String phone=txt_phone.getText();
		System.out.println("Title: " +phone);
		return phone;
	}
	public String getEmail() {
		String email=txt_email.getText();
		System.out.println("Title: " +email);
		return email;
	}
}

-----------------

package com.selenium.setup;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class DriverSetup {

	private WebDriver driver;
	public static String baseUrl = "";


	public WebDriver getDriver() {
		String path = System.getProperty("user.dir");
		String driverpath = path + "\\drivers\\\\chromedriver.exe";
		System.setProperty("webdriver.chrome.driver", driverpath);
		driver = new ChromeDriver();
		
		driver.navigate().to(DriverSetup.baseUrl);
		return driver;
	}

}
---------
package com.selenium.setup;

import java.io.File;
import java.io.FileInputStream;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelUtils {

	private static XSSFSheet ExcelWSheet;
	private static XSSFWorkbook ExcelWBook;
	private static FileInputStream excelFile;
	private static String filePath;

	/*public static Object[][] getExcelData(String sheetName) throws Exception{
		Object[][] arrayExcelData = readExcelData(sheetName);
		return arrayExcelData;
	}*/

	public static Object[][] readExcelData(String sheetName) throws Exception{
		String[][] arrayExcelData = null;

		String workingDir = System.getProperty("user.dir");
		filePath = workingDir + File.separator + "src" + File.separator + "customer_registration.xlsx";

		excelFile = new FileInputStream(filePath);
		ExcelWBook = new XSSFWorkbook(excelFile);
		ExcelWSheet = ExcelWBook.getSheet(sheetName);
		int startRow=1;
		int startCol=1;
		int ci, cj;
		int totalrows=ExcelWSheet.getLastRowNum();
		int totalcols=5;
		arrayExcelData =new String [totalrows][totalcols];
		ci=0;
		for(int i=startRow;i<=totalrows;i++,ci++) {
			cj=0;
			for(int j=startCol;j<=totalcols;j++,cj++) {
				arrayExcelData[ci][cj] = getCellData(i,j);
			}
		}
		return arrayExcelData;
	}

	@SuppressWarnings("deprecation")
	public static String getCellData(int RowNum, int ColNum) throws Exception {
		XSSFCell Cell = ExcelWSheet.getRow(RowNum).getCell(ColNum);
		//int dataType=Cell.getCellType();
		if(Cell == null ||  Cell.getCellType() == XSSFCell.CELL_TYPE_BLANK) {
			return "";
		}else {
			String CellData =Cell.getStringCellValue();
			return CellData;
		}
	}
}

-----------------------

package com.selenium.tests;

import org.openqa.selenium.WebDriver;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import com.selenium.pages.CustomerForm;
import com.selenium.setup.DriverSetup;
import com.selenium.setup.ExcelUtils;;


public class TestCustomerForm extends DriverSetup{

	WebDriver driver;
	CustomerForm customerForm;
	static public String blankErrtxt;

	@BeforeTest
	public void setUp() {		
		driver = getDriver();
		customerForm = new CustomerForm(driver);
	}

	@Test(dataProvider="getExcelData")
	public void testInvalidCustomerDetails(String customerName, String age, String address, String phoneNumber, String email) {
		System.out.println(customerName);
		System.out.println(age);
		System.out.println(address);
		System.out.println(phoneNumber);
		System.out.println(email);

		customerForm.testSetCustomerName(customerName);
		customerForm.testSetAge(age);
		customerForm.testSetAddress(address);
		customerForm.testSetPhoneNumber(phoneNumber);
		customerForm.testSetEmail(email);
		customerForm.submitForm();

		blankErrtxt =customerForm.testGetErrorMessage();

		if (blankErrtxt.contains("cannot be blank")) {
			System.out.println("test invalid customer details passed");
			Reporter.log("test invalid customer details passed",true);

		}else
		{
			Assert.fail("test invalid customer details Failed");
			System.out.println("test invalid customer details Failed");
			Reporter.log("test invalid customer details Failed", true);
		}
	}

	/*@DataProvider()
	public Object[][] customerInvalid() throws Exception{
		Object[][] arrayExcelData = ExcelUtils.readExcelData("customer_invalid");
		return arrayExcelData;
	}*/
	
	@DataProvider()
	public static Object[][] getExcelData() throws Exception{
		Object[][] arrayExcelData = ExcelUtils.readExcelData("customer_invalid");
		return arrayExcelData;
	}


	@AfterClass
	public void closeBrowser() {		
		driver.close();
	}
}

----------------------
package com.selenium.tests;

import org.openqa.selenium.WebDriver;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import com.selenium.pages.CustomerForm;
import com.selenium.pages.DisplayCustomer;
import com.selenium.setup.DriverSetup;
import com.selenium.setup.ExcelUtils;

public class TestDisplayCustomer extends DriverSetup{

	WebDriver driver;
	//CustomerForm customerForm;
	DisplayCustomer displayCustomer;

	public static String titletxt;
	public static String customerNametxt;
	public static String agetxt;
	public static String addresstxt;
	public static String numbertxt;
	public static String emailtxt;

	@BeforeClass
	public void setUp() {
		driver=getDriver();
		//displayCustomer=new DisplayCustomer(driver);
		displayCustomer = new DisplayCustomer(driver);
		//customerForm = new CustomerForm(driver);
	}

	@Test(dataProvider="getExcelData")
	public void testValidCustomerDetails(String customerName, String age, String address, String phoneNumber, String email) {
		//displayCustomer = new DisplayCustomer(driver);
		//customerForm = new CustomerForm(driver);
		CustomerForm customerForm = new CustomerForm(driver);
		System.out.println(customerName);
		System.out.println(age);
		System.out.println(address);
		System.out.println(phoneNumber);
		System.out.println(email);

		customerForm.testSetCustomerName(customerName);
		customerForm.testSetAge(age);
		customerForm.testSetAddress(address);
		customerForm.testSetPhoneNumber(phoneNumber);
		customerForm.testSetEmail(email);
		customerForm.submitForm();

		titletxt=displayCustomer.getTitle();
		customerNametxt =displayCustomer.getName();
		agetxt =displayCustomer.getAge();
		emailtxt=displayCustomer.getEmail();
		addresstxt=displayCustomer.getAddress();
		numbertxt=displayCustomer.getPhoneNumber();

		System.out.println(titletxt);
		System.out.println(customerNametxt);
		System.out.println(agetxt);
		System.out.println(addresstxt);
		System.out.println(numbertxt);
		System.out.println(emailtxt);


		if((titletxt.contains("Registered Succesfully")) && (customerNametxt.contains(customerName))
				&& (agetxt.contains(age))
				&& (emailtxt.contains(email))
				&& (addresstxt.contains(address)) && (numbertxt.contains(phoneNumber))){

			System.out.println( "Valid test Passed");
			Reporter.log("test valid customer Passed", true);
		}else {
			Assert.fail("test Valid customer details Failed");
			System.out.println( "Valid test Failed");
			Reporter.log("test valid customer Failed", true);
		}
	}

	/*@DataProvider()
	public Object[][] customervalid() throws Exception{
		Object[][] arrayExcelData = ExcelUtils.getExcelData("customer_valid");
		return arrayExcelData;
	}*/

	@DataProvider()
	public static Object[][] getExcelData() throws Exception{
		Object[][] arrayExcelData = ExcelUtils.readExcelData("customer_valid");
		return arrayExcelData;
	}


	@AfterClass
	public void closeBrowser() {		
		driver.close();
	}


}
--------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="Suite">
	<test name="ChromeTest">
		<parameter name="browser" value="Chrome" />
		<classes>
			<class name="com.selenium.tests.TestCustomerForm" />
			<class name="com.selenium.tests.TestDisplayCustomer" />
		</classes>
	</test>
</suite>

-----------------------

